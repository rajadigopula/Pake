name: Build YouTube-AdBlock Pake MSI

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-win:
    runs-on: windows-latest
    steps:
      # ---------- 1. checkout ----------
      - name: Checkout repo
        uses: actions/checkout@v4

      # ---------- 2. install Rust ----------
      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable

      # ---------- 3. install Node ----------
      - name: Install Node 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # ---------- 4. clone Pake ----------
      - name: Clone Pake
        run: |
          git clone https://github.com/tw93/pake.git _pake

      # ---------- 5. install deps (NO ci) ----------
      - name: Install Pake deps
        working-directory: _pake
        run: npm install

      # ---------- 5b. stage userscript INSIDE src-tauri ----------
      - name: Stage userscript for injection
        run: |
          New-Item -ItemType Directory -Force _pake/src-tauri/userscript
          Invoke-WebRequest `
            -Uri https://raw.githubusercontent.com/fairy-root/youtube-adblock/main/youtubeadblock.js `
            -OutFile _pake/src-tauri/userscript/youtubeadblock.js

      # ---------- 5c. hide console window ----------
      - name: Hide console window
        run: |
          $conf = Get-Content _pake/src-tauri/tauri.conf.json -Raw | ConvertFrom-Json
          $conf.tauri.bundle.windows.console = $false
          $conf | ConvertTo-Json -Depth 10 | Set-Content _pake/src-tauri/tauri.conf.json

      # ---------- 6. build + wait ----------
      - name: Build MSI with injected script
        shell: pwsh
        working-directory: _pake
        run: |
          $job = Start-Process npx -ArgumentList "pake","https://www.youtube.com","--name","YouTube-AdBlock","--targets","x86_64-pc-windows-msvc","--inject","src-tauri/userscript/youtubeadblock.js","--debug" -NoNewWindow -PassThru
          $job.WaitForExit()
          if ($job.ExitCode -ne 0) { throw "Build failed" }

      # ---------- 7. find MSI anywhere ----------
      - name: Collect MSI
        shell: pwsh
        run: |
          $msi = Get-ChildItem -Path . -Recurse -Filter *.msi | Select-Object -First 1
          if (-not $msi) { throw "No MSI produced" }
          Copy-Item $msi.FullName youtube-adblock-x64.msi

      # ---------- 8. upload ----------
      - name: Upload MSI
        uses: actions/upload-artifact@v4
        with:
          name: youtube-adblock-x64
          path: youtube-adblock-x64.msi
